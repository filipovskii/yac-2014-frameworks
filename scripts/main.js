"use strict";!function(){function e(e,t,o){var r=new window.Chart,n=new window.Chart,s=new window.Chart,a=new window.Chart,i=new window.Chart,d=new window.Chart,u=[r,n,s,a,i,d];t=t||0,r.setTitle("Number of new SO questions per month").setSubTitle("Source: StackOverflow.com").setYAxisName("New questions").setDOMId("so-questions-new"),n.setTitle("Abs number of SO questions per month").setSubTitle("Source: StackOverflow.com").setYAxisName("Questions").setDOMId("so-questions-abs"),s.setTitle("Normalized number of new SO questions per month").setSubTitle("Source: StackOverflow.com").setYAxisName("Questions Growth, %").setDOMId("so-questions-norm"),a.setTitle("Number of new github stars per month").setSubTitle("Source: githubarchive.org").setYAxisName("New stars").setDOMId("gh-stars-new"),i.setTitle("Number of total github stars in month").setSubTitle("Source: githubarchive.org").setYAxisName("Total stars").setDOMId("gh-stars-abs"),d.setTitle("Normalized growth of github stars").setSubTitle("Source: githubarchive.org").setYAxisName("Stars Growth, %").setDOMId("gh-stars-norm"),e.forEach(function(e){var t=e.toLowerCase(),o=window.COLOR_BY_FRAMEWORK[e];r.addSeries({name:e,color:o,data:window.STACK_OVERFLOW_NEW[t]}),n.addSeries({name:e,color:o,data:window.STACK_OVERFLOW_ABS[t]}),s.addSeries({name:e,color:o,data:window.STACK_OVERFLOW_NORM[t]}),a.addSeries({name:e,color:o,data:window.GITHUB_NEW_STARS[t]}),i.addSeries({name:e,color:o,data:window.GITHUB_ABS_STARS[t]}),d.addSeries({name:e,color:o,data:window.GITHUB_NORM_STARS[t]})}),u.forEach(function(e){e.setXAxis(window.DATES).setFrom(t).setTo(o).draw()})}var t=document.querySelector("form");!function(){var e=document.querySelector(".frameworks");window.FRAMEWORKS.forEach(function(t){var o=document.createElement("label"),r=document.createElement("input");o.for=t,o.innerText=t,o.appendChild(r),r.type="checkbox",r.id=t,r.name=t,r.checked=!0,e.appendChild(o)})}(),document.querySelector("button").addEventListener("click",function(o){var r,n={},s=0,a=56;o.preventDefault(),Array.prototype.forEach.call(t,function(e){return"from"===e.name?void(s=parseInt(e.value)):"to"===e.name?void(a=parseInt(e.value)+1):void(n[e.name]=e.checked)}),r=Object.keys(n).filter(function(e){return n[e]}),setTimeout(function(){e(r,s,a)},100)}),e(window.FRAMEWORKS)}();